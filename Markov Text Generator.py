#Ose Agboneni
#First Order Markov Text Generator

import random

def create_dictionary(filename):
    """Takes a string representing the name of a text file
       and returns a dictionary of key-value pairs in
       which each key is a word encountered in the text
       file and the corresponding balue is a list of
       words that follow the key word in the text file"""
    file = open(filename, 'r')
    text = file.read()
    file.close()

    words = text.split()
    
    word_dict = {}
    current_word = '$'
    
    for next_word in words:
        if current_word not in word_dict:
            word_dict[current_word] = [next_word]
        else:
            word_dict[current_word] += [next_word]
        if next_word[-1] in '!.?':
            current_word = '$'
        else:
            current_word = next_word
    return word_dict


def generate_text(word_dict, num_words):
    """ takes as parameters a dictionary of word transitions (generated by the
    create_dictionary function) named word_dict and a positive integer named
    num_words. The function should use word_dict to generate and print
    a string of num_words words."""
    s = ''
    wordlist = word_dict['$']
    current_word = random.choice(wordlist)
    s += current_word + " "
    for r in range(num_words):
        wordlist = word_dict[current_word]
        next_word = random.choice(wordlist)
        s += next_word + " "
        if next_word[-1] in '!?.' or next_word not in word_dict:
            current_word = '$'
        else:
            current_word = next_word
    print(s)

